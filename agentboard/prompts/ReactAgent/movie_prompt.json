{
  "instruction": [{"name": "get_search_movie", "description": "Search for a movie by name and return basic details", "parameters": {"type": "object", "properties": {"movie_name": {"type": "string", "description": "The name of the movie to search for."}}}, "returns": {"type": "object", "properties": {"id": {"type": "string", "description": "The ID of the found movie."}, "overview": {"type": "string", "description": "The overview description of the movie."}, "title": {"type": "string", "description": "The title of the movie."}}}}, {"name": "get_movie_details", "description": "Get detailed information about a movie by ID", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "The ID of the movie."}}}, "returns": {"type": "object", "properties": {"budget": {"type": "number", "description": "The budget of the movie."}, "genres": {"type": "array", "description": "The genres of the movie."}, "revenue": {"type": "number", "description": "The revenue of the movie."}, "vote_average": {"type": "number", "description": "The average vote score of the movie."}, "release_date": {"type": "string", "description": "The release date of the movie."}}}}, {"name": "get_movie_production_companies", "description": "Get the production companies of a movie by its ID", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "The ID of the movie."}}}, "returns": {"type": "object", "properties": {"production_companies": {"type": "array", "description": "The production companies of the movie."}}}}, {"name": "get_movie_production_countries", "description": "Get the production countries of a movie by its ID", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "The ID of the movie."}}}, "returns": {"type": "object", "properties": {"production_countries": {"type": "array", "description": "The production countries of the movie."}}}}, {"name": "get_movie_cast", "description": "Retrieve the list of the top 10 cast members from a movie by its ID.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "The ID of the movie."}}}, "returns": {"type": "object", "properties": {"cast": {"type": "array", "description": "List of the top 10 cast members."}}}}, {"name": "get_movie_crew", "description": "Retrieve the list of crew members (limited to 10) from a movie by its ID. The list primarily includes Director, Producer, and Writer roles.", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "The ID of the movie."}}}, "returns": {"type": "object", "properties": {"crew": {"type": "array", "description": "List of the top 10 of crew members"}}}}, {"name": "get_movie_keywords", "description": "Get the keywords associated with a movie by ID", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "The ID of the movie."}}}, "returns": {"type": "object", "properties": {"keywords": {"type": "array", "description": "The keywords associated with the movie."}}}}, {"name": "get_search_person", "description": "Search for a person by name.", "parameters": {"type": "object", "properties": {"person_name": {"type": "string", "description": "The name of the person to search for."}}}, "returns": {"type": "object", "properties": {"id": {"type": "string", "description": "The ID of the found person."}, "name": {"type": "string", "description": "The name of the person."}}}}, {"name": "get_person_details", "description": "Get detailed information about a person by ID", "parameters": {"type": "object", "properties": {"person_id": {"type": "string", "description": "The ID of the person."}}}, "returns": {"type": "object", "properties": {"biography": {"type": "string", "description": "The biography of the person."}, "birthday": {"type": "string", "description": "The birthday of the person."}, "place_of_birth": {"type": "string", "description": "The place of birth of the person."}}}}, {"name": "get_person_cast", "description": "Retrieve the top 10 movie cast roles of a person by their ID", "parameters": {"type": "object", "properties": {"person_id": {"type": "string", "description": "The ID of the person."}}}, "returns": {"type": "object", "properties": {"cast": {"type": "array", "description": "A list of movies where the person has acted, limited to top 10"}}}}, {"name": "get_person_crew", "description": "Retrieve the top 10 movie crew roles of a person by their ID", "parameters": {"type": "object", "properties": {"person_id": {"type": "string", "description": "The ID of the person."}}}, "returns": {"type": "object", "properties": {"crew": {"type": "array", "description": "A list of movies where the person has participated as crew, limited to top 10"}}}}, {"name": "get_person_external_ids", "description": "Get the external ids for a person by ID", "parameters": {"type": "object", "properties": {"person_id": {"type": "string", "description": "The ID of the person."}}}, "returns": {"type": "object", "properties": {"imdb_id": {"type": "string", "description": "The IMDB id of the person."}, "facebook_id": {"type": "string", "description": "The Facebook id of the person."}, "instagram_id": {"type": "string", "description": "The Instagram id of the person."}, "twitter_id": {"type": "string", "description": "The Twitter id of the person."}}}}, {"name": "get_movie_alternative_titles", "description": "Get the alternative titles for a movie by ID", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "The ID of the movie."}}}, "returns": {"type": "object", "properties": {"titles": {"type": "array", "description": "The alternative titles of the movie."}, "id": {"type": "string", "description": "The ID of the movie."}}}}, {"name": "get_movie_translation", "description": "Get the description translation for a movie by ID", "parameters": {"type": "object", "properties": {"movie_id": {"type": "string", "description": "The ID of the movie."}}}, "returns": {"type": "object", "properties": {"translations": {"type": "array", "description": "The description translation of the movie."}, "id": {"type": "string", "description": "The ID of the movie."}}}}, {"name": "check_valid_actions", "description": "Get supported actions for current tool.", "returns": {"type": "array", "description": "actions"}}, {"name": "UnsolvableRequest", "description": "Indicate that the current request cannot be solved with existing APIs.", "parameters": {"properties": {"message": {"type": "string", "description": "Message explaining why the request cannot be resolved."}}}}, {"name": "Finish", "description": "If you believe that you have obtained a result that can answer the task, please call this function to provide the final answer. Alternatively, if you recognize that you are unable to proceed with the task in the current state, call this function to restart. Remember: you must ALWAYS call this function at the end of your attempt, and the only part that will be shown to the user is the final answer, so it should contain sufficient information.", "parameters": {"type": "object", "properties": {"return_type": {"type": "string", "enum": ["give_answer", "give_up_and_restart"]}, "final_answer": {"type": "string", "description": "The final answer you want to give the user. You should have this field if 'return_type'=='give_answer'"}}, "required": ["return_type"]}}],
  "examples": [
    "Goal: When did the movie Scream 6 come out?\n\nThink: This question is about release date of the movie, I need to get the movie id first and use the movie id to query movie details\nThink: To get the movie id, I can use get_search_movie action.\nAction: get_search_movie with Action Input: {\"movie_name\": \"Scream 6\"}\nObservation: {'id': 934433, 'overview': 'Following the latest Ghostface killings, the four survivors leave Woodsboro behind and start a fresh chapter.', 'title': 'Scream VI'}\nAction: get_movie_details with Action Input: {\"movie_id\": \"934433\"}\nObservation: {'budget': 35000000, 'genres': [{'id': 27, 'name': 'Horror'}, {'id': 53, 'name': 'Thriller'}, {'id': 9648, 'name': 'Mystery'}], 'revenue': 168961389, 'vote_average': 7.175, 'release_date': '2023-03-08'}\nThink: The release date is 2023-03-08, I will call finish to end this goal.\nAction: finish with Action Input: {\"answer\": \"2023-03-08\"}\nObservation: 2023-03-08\n"
  ],
 "system_msg": "You are AutoGPT, you can use many tools(functions) to do the following task.\nFirst I will give you the task description, and your task start.\nAt each step, you need to give your thought to analyze the status now and what to do next, with a function call to actually excute your step. Your output should follow this format:\nThought:\nAction\nAction Input:\n\nAfter the call, you will get the call result, and you are now in a new state.\nThen you will analyze your status now, then decide what to do next...\nAfter many (Thought-call) pairs, you finally perform the task, then you can give your finial answer.\nRemember: \n1.the state change is irreversible, you can't go back to one of the former state, if you want to restart the task, say \"I give up and restart\".\n2.All the thought is short, at most in 5 sentence.\n3.You can do more then one trys, so if your plan is to continusly try some conditions, you can do one of the conditions per try.\nLet's Begin!\nTask description: You should use functions to help handle the real time user querys.\nRemember:\n1.ALWAYS call \"Finish\" function at the end of the task. And the final answer should contain enough information to show to the user,If you can't handle the task, or you find that function calls always fail(the function is not valid now), use function Finish->give_up_and_restart.\n2.Do not use origin tool names, use only subfunctions' names.\nYou have access of the following tools:\n1.MoviewTool:Movie Tool grants LLM agents to use the movie tool to access cinematic data, encompassing film details, personnel and production companies.\n\nSpecifically, you have access to the following APIs:"
}