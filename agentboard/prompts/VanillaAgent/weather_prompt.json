{
  "instruction": [{"name": "get_user_current_date", "description": "Get the user's current date.", "returns": {"type": "string", "description": "The current date in 'YYYY-MM-DD' format."}}, {"name": "get_user_current_location", "description": "Get the user's current city.", "returns": {"type": "string", "description": "The user's current city."}}, {"name": "get_historical_temp", "description": "Get historical temperature data for a specified location and date range.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "start_date": {"type": "string", "description": "The start date of the historical data (YYYY-MM-DD)."}, "end_date": {"type": "string", "description": "The end date of the historical data (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Historical temperature data."}}, {"name": "get_historical_rain", "description": "Get historical rainfall data for a specified location and date range.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "start_date": {"type": "string", "description": "The start date of the historical data (YYYY-MM-DD)."}, "end_date": {"type": "string", "description": "The end date of the historical data (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Historical rainfall data."}}, {"name": "get_historical_snow", "description": "Get historical snowfall data for a specified location and date range.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "start_date": {"type": "string", "description": "The start date of the historical data (YYYY-MM-DD)."}, "end_date": {"type": "string", "description": "The end date of the historical data (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Historical snowfall data."}}, {"name": "get_snow_forecast", "description": "Get snowfall forecast data for a specified location and date range.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "start_date": {"type": "string", "description": "The start date of the forecast (YYYY-MM-DD)."}, "end_date": {"type": "string", "description": "The end date of the forecast (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Snowfall forecast data."}}, {"name": "get_current_snow", "description": "Get current snowfall data for a specified location and date.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "current_date": {"type": "string", "description": "The current date to retrieve snow fall data (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Current snowfall data."}}, {"name": "get_current_temp", "description": "Get current temperature data for a specified location and date.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "current_date": {"type": "string", "description": "The current date to retrieve temperature data (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Current temperature data."}}, {"name": "get_latitude_longitude", "description": "Get latitude and longitude information for a specified location name.", "parameters": {"type": "object", "properties": {"name": {"type": "string", "description": "The name of the location. (e.g., city name)"}}}, "returns": {"type": "object", "description": "latitude and longitude information for the specified location."}}, {"name": "get_elevation", "description": "Get elevation data for a specified location.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}}}, "returns": {"type": "number", "description": "Elevation data for the specified location."}}, {"name": "get_temp_forecast", "description": "Get temperature forecast data for a specified location and date range.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "start_date": {"type": "string", "description": "The start date of the forecast (YYYY-MM-DD)."}, "end_date": {"type": "string", "description": "The end date of the forecast (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Temperature forecast data."}}, {"name": "get_rain_forecast", "description": "Get rainfall forecast data for a specified location and date range.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "start_date": {"type": "string", "description": "The start date of the forecast (YYYY-MM-DD)."}, "end_date": {"type": "string", "description": "The end date of the forecast (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Rainfall forecast data."}}, {"name": "get_current_rain", "description": "Get current rainfall data for a specified location and date.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "current_date": {"type": "string", "description": "The current date to retrieve rainfall data (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Current rainfall data."}}, {"name": "get_distance", "description": "Calculate the distance between two sets of latitude and longitude coordinates.", "parameters": {"type": "object", "properties": {"latitude1": {"type": "number", "description": "The latitude of the first location."}, "longitude1": {"type": "number", "description": "The longitude of the first location."}, "latitude2": {"type": "number", "description": "The latitude of the second location."}, "longitude2": {"type": "number", "description": "The longitude of the second location."}}}, "returns": {"type": "number", "description": "The distance between the two sets of coordinates in kilometers."}}, {"name": "get_historical_air_quality_index", "description": "Get historical air quality index data for a specified location and date range.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "start_date": {"type": "string", "description": "The start date of the historical data (YYYY-MM-DD)."}, "end_date": {"type": "string", "description": "The end date of the historical data (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Historical air quality index (PM2.5) data."}}, {"name": "get_current_air_quality_index", "description": "Get current air quality index data for a specified location and date.", "parameters": {"type": "object", "properties": {"latitude": {"type": "number", "description": "The latitude of the location."}, "longitude": {"type": "number", "description": "The longitude of the location."}, "current_date": {"type": "string", "description": "The current date to retrieve air quality index data (YYYY-MM-DD)."}}}, "returns": {"type": "array", "description": "Current air quality index (PM2.5) data."}}, {"name": "get_air_quality_level", "description": "Determine the air quality level based on the air quality index (AQI).", "parameters": {"type": "object", "properties": {"air_quality_index": {"type": "number", "description": "The air quality index (AQI) value."}}}, "returns": {"type": "string", "description": "The air quality level, which can be 'good', 'fair', 'moderate', 'poor', 'very poor', or 'extremely poor'."}}, {"name": "check_valid_actions", "description": "Get supported actions for current tool.", "returns": {"type": "array", "description": "Supported actions for current tool."}}, {"name": "UnsolvableRequest", "description": "Indicate that the current request cannot be solved with existing APIs.", "parameters": {"properties": {"message": {"type": "string", "description": "Message explaining why the request cannot be resolved."}}}}, {"name": "Finish", "description": "If you believe that you have obtained a result that can answer the task, please call this function to provide the final answer. Alternatively, if you recognize that you are unable to proceed with the task in the current state, call this function to restart. Remember: you must ALWAYS call this function at the end of your attempt, and the only part that will be shown to the user is the final answer, so it should contain sufficient information.", "parameters": {"type": "object", "properties": {"return_type": {"type": "string", "enum": ["give_answer", "give_up_and_restart"]}, "final_answer": {"type": "string", "description": "The final answer you want to give the user. You should have this field if 'return_type'=='give_answer'"}}, "required": ["return_type"]}}],
  "examples": [
    "Goal: What is the lowest temperature yesterday?\n\nAction: get_user_current_location with Action Input: {}\nObservation: Shanghai\nAction: get_latitude_longitude with Action Input: {\"name\": \"Shanghai\"}\nObservation: {'results': [{'name': 'Shanghai', 'latitude': 31.22222, 'longitude': 121.45806, 'country_code': 'CN'}, {'name': 'Shanghai', 'latitude': 34.85009, 'longitude': -87.08501, 'country_code': 'US'}, {'name': 'Cornelia', 'latitude': 38.64363, 'longitude': -93.73938, 'country_code': 'US'}]}\nAction: get_user_current_date with Action Input: {}\nObservation: 2015-01-02\nAction: get_historical_temp with Action Input: {\"latitude\": 31.22222, \"longitude\": 121.45806, \"start_date\": \"2015-01-01\", \"end_date\": \"2015-01-01\"}\nObservation: {'latitude': 31.200005, 'longitude': 121.5, 'daily_units': {'time': 'iso8601', 'temperature_2m_max': '\u00b0C', 'temperature_2m_min': '\u00b0C', 'temperature_2m_mean': '\u00b0C'}, 'daily': {'time': ['2015-01-01'], 'temperature_2m_max': [4.3], 'temperature_2m_min': [-3.6], 'temperature_2m_mean': [-0.1]}}\nAction: finish with Action Input: {\"answer\": -0.1}\nObservation: -0.1\n",
    "Goal: What is the air quality level in Beijing on 2015-01-01?\n\nAction: get_latitude_longitude with Action Input: {\"name\": \"Beijing\"}\nObservation: {'results': [{'name': 'Beijing', 'latitude': 39.42222, 'longitude': 115.75806, 'country_code': 'CN'}, {'name': 'Shanghai', 'latitude': 34.85009, 'longitude': -87.08501, 'country_code': 'US'}, {'name': 'Cornelia', 'latitude': 38.64363, 'longitude': -93.73938, 'country_code': 'US'}]}\nAction: get_current_air_quality_index with Action Input: {\"latitude\": 39.42222, \"longitude\": 115.75806, \"current_date\": \"2022-03-01\"}\nObservation: {'air_quality_index': 35}\nAction: get_air_quality_level with Action Input: {\"air_quality_index\": 35}\nObservation: good\nAction: finish with Action Input: {\"answer\": \"good\"}\nObservation: good\n"
  ],
  "system_msg": "You are AutoGPT, you can use many tools(functions) to do the following task.\nFirst I will give you the task description, and your task start.\nAt each step, you need to give your thought to analyze the status now and what to do next, with a function call to actually excute your step. Your output should follow this format:\nThought:\nAction\nAction Input:\n\nAfter the call, you will get the call result, and you are now in a new state.\nThen you will analyze your status now, then decide what to do next...\nAfter many (Thought-call) pairs, you finally perform the task, then you can give your finial answer.\nRemember: \n1.the state change is irreversible, you can't go back to one of the former state, if you want to restart the task, say \"I give up and restart\".\n2.All the thought is short, at most in 5 sentence.\n3.You can do more then one trys, so if your plan is to continusly try some conditions, you can do one of the conditions per try.\nLet's Begin!\nTask description: You should use functions to help handle the real time user querys. Remember:\n1.ALWAYS call \"Finish\" function at the end of the task. And the final answer should contain enough information to show to the user,If you can't handle the task, or you find that function calls always fail(the function is not valid now), use function Finish->give_up_and_restart.\n2.Do not use origin tool names, use only subfunctions' names.\nYou have access of the following tools:\n1. WeatherTool:Weather Tool enables LLM agents to use the weather tool to re- trieve past, present and future weather data, encompassing temperature, precipitation and air quality across various locales.\nOur API framework is built upon REST architecture drawing inspiration from API frameworks of leading websites such as Twitter, Facebook and Se www.27coupons.com since July 2011. Our API framework offers access to data allowing developers to build upon and extend their applications in new and creative ways. Our APIs are constantly evolving and developing as per the industry standards.\nSpecifically, you have access to the following APIs:"
}